# Options: slack
platform: slack
# The channel where incident activity is logged (must be public)
digest_channel: incidents

# In order to be properly formatted in Slack,
# lines in descriptions of roles and severities should be max 80 characters

roles:
# Roles defined here will appear as options for each incident
  incident_commander: |
    The Incident Commander is the decision maker during a major incident,
    collaborating with subject matter experts and other stakeholders on
    resolution of the incident. They become the highest ranking individual on
    any major incident call, regardless of their day-to-day role. Their
    decisions made as commander are final.
    
    Your job as an Incident Commander is to monitor the conference call and
    incident Slack channel and provide coordination, delegating tasks, gathering
    information and keeping incident time-line and context in the GitHub issue. 
    You should not be directly participating on mitigation, data analysis, code
    changes or external communications. Those tasks should be delegated. Incident
    Commander in collaboration with subject domain experts should be planning
    next steps and coordinating creation of contingency plans.
    
    More information: https://response.pagerduty.com/training/incident_commander
  communications_liaison: |
    The Communications Liaison is in charge of notifying customers, partners
    and other external stakeholders of the current state of the incident. It
    should provide relevant feedback from external stakeholders to the Incident
    Commander. The Incident Commander instructs the Communication Liaison to
    notify customers about significant events related to the incident.
    
    More information: https://response.pagerduty.com/training/customer_liaison
# Severities defined here will appear as options for each incident
severities:
  sev1: |
    Critical production issue impacting most or all users with a major impact on
    SLAs. This is an all-hands-on-deck scenario that requires swift action to
    restore operation. Customers must be notified.
  sev2: |
    Significant performance and/or functional degradation impacting a large
    number of users.
  sev3: |
    Minor production issue that may or may not user affecting impact.
    The issue is worth coordination facilitating quick resolution but does not
    indicate significant on SLAs.
  sev4: |
    Ongoing investigation. The incident has not been promoted to SEV3 yet,
    indicating no significant on SLAs, but the situation warrants closer
    investigation and monitoring. This is the default setting for a new incident.
# Generate periodic reminders to incident channel
incident_reminders:
  # Any severity in this list will have a scheduled reminder job created
  qualifying_severities:
    - sev1
  # period in minutes at which reminders are sent to an incident channel
  rate: 30
# Status labels
statuses:
  - investigating
  - identified
  - monitoring
  - resolved
options:
  # The topic that will be set on all incident channels
  channel_topic:
    default: 'This is the default incident channel topic. You can edit it in settings.'
    # Set the channel topic to contain the incident Zoom meeting link. Overrides incident_channel_topic.
    set_to_meeting_link: true
  # Timezone to use for logging, etc.
  timezone: UTC
  # Conference bridge link to use if auto-creation is not enabled
  conference_bridge_link: 'https://zoom.us'
  # Allow creation of incidents by reacting to a message
  create_from_reaction:
    enabled: false
    # The name of the reacji ???
    # It must exist in your workspace
    reacji: create-incident
  # Automatically invite Slack groups to newly created incidents
  auto_invite_groups:
    enabled: false
    # list of group names
    groups:
      - my-slack-group
      - my-other-slack-group
  # Ignore logging for requests from the following user-agents
  skip_logs_for_user_agent:
    # Kubernetes health check user-agent
    - kube-probe
    # AWS ELB health check user-agent
    - ELB-HealthChecker/2.0
integrations:
  # Secret data is provided as environment variables for integrations
  # Only non-secret data is configured here
  atlassian:
    # Enable Confluence integration
    confluence:
      # Set to true to automatically create an RCA doc
      auto_create_rca: true
      space: ENGINEERIN
      parent: RCAs
    # Enable Jira integration
    jira:
      project: 'SRE'
      # Labels to apply to created issues
      labels:
        - incident-management
  # Simply provide an empty dict to enable PagerDuty
  # pagerduty: {}
  # Enable Statuspage integration
  statuspage:
    # The public URL of the Statuspage.
    url: https://status.mydomain
    # Which Slack groups have permissions to manage Statuspage incidents?
    # If not provided, everyone can manage Statuspage incidents from Slack.
    # permissions:
    #   groups:
    #     - my-slack-group
  # Enable Zoom integration
  zoom:
    # Automatically generate Zoom meeting for each incident
    auto_create_meeting: true
  github:
    # Allow creation of GitHub issue from a template stored in the repo
    repository: '<owner>/<repo>'
    issue_template: '<repo_path_to_issue_template>'

links:
  incident_guide: https://changeme.com
  incident_postmortems: https://changeme.com
